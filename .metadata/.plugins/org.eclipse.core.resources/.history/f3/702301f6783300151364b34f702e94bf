<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:spring="http://www.springframework.org/schema/beans"
    xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
    xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps"
    xmlns:email="http://www.mulesoft.org/schema/mule/email"
    xmlns:servlet="http://www.mulesoft.org/schema/mule/servlet"
    xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/servlet http://www.mulesoft.org/schema/mule/servlet/current/mule-servlet.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd" version="EE-3.4.0">

    <context:property-placeholder location="email.properties" />

    <!-- Configure some properties to work with GMail's SMTP -->
    <smtp:gmail-connector name="emailConnector" doc:name="Gmail"/>

    <!-- Use this as a poor man's message queue, in the real world we would use JMS -->
    <vm:connector name="vmQueues" doc:name="VM"/>

    <!-- This queue contains a feed of the latest statistics generated by
        the Data Warehouse (it should really be a LIFO queue) -->
    <vm:endpoint name="stats" path="statistics" exchange-pattern="one-way" doc:name="VM"/>

    <!-- Convert request parameters to Book object -->
    <custom-transformer name="HttpRequestToBook" class="ua.org.gostroy.bookstore.transformers.HttpRequestToBook" doc:name="Java"/>

    <!-- Format response to be a nice HTML page -->
    <custom-transformer name="AddBookResponse" class="ua.org.gostroy.bookstore.transformers.AddBookResponse" doc:name="Java"/>

    <custom-transformer name="OrderToEmail" class="ua.org.gostroy.bookstore.transformers.OrderToEmailTransformer" doc:name="Java"/>

	<custom-transformer name="StringToEmail" class="org.mule.transport.email.transformers.StringToEmailMessage" doc:name="Java"/>
    <spring:beans>
        <spring:bean name="CatalogService" class="ua.org.gostroy.bookstore.CatalogServiceImpl" init-method="initialise"/>
    </spring:beans>


    <message-properties-transformer name="setHtmlContentType" overwrite="true" doc:name="Message Properties">
        <add-message-property key="Content-Type" value="text/html" />
        <!-- Tomcat lowercases headers, need to drop this old one too -->
        <delete-message-property key="content-type" />
    </message-properties-transformer>

    <!-- Administration interface -->
    <flow name="CatalogAdminInterface" doc:name="CatalogAdminInterface">
        <inbound-endpoint address="servlet://catalog" exchange-pattern="request-response" transformer-refs="HttpRequestToBook"
                responseTransformer-refs="AddBookResponse setHtmlContentType" doc:name="Administration interface"/>

        <component doc:name="Catalog Service">
            <spring-object bean="CatalogService" />
        </component>
    </flow>

    <!-- Public interface -->
    <flow name="CatalogPublicInterface" doc:name="CatalogPublicInterface">
        <http:inbound-endpoint address="http://0.0.0.0:8777/services/catalog" exchange-pattern="request-response" doc:name="Public interface"/>
        <cxf:jaxws-service serviceClass="ua.org.gostroy.bookstore.CatalogService" doc:name="SOAP"/>
        <component doc:name="Catalog Service">
            <spring-object bean="CatalogService"/>
        </component>
    </flow>

    <flow name="OrderService2" doc:name="OrderService2">
        <http:inbound-endpoint address="http://0.0.0.0:8777/services/order" exchange-pattern="request-response" doc:name="Public order interface"/>
        <cxf:jaxws-service serviceClass="ua.org.gostroy.bookstore.OrderService" doc:name="SOAP"/>
        <component doc:name="Order Service">
            <singleton-object class="ua.org.gostroy.bookstore.OrderServiceImpl"/>
        </component>
        <async doc:name="Async">
            <vm:outbound-endpoint path="emailNotification" exchange-pattern="one-way" doc:name="Email Notification"/>
            <vm:outbound-endpoint path="dataWarehouse" exchange-pattern="one-way" doc:name="Data Warehouse"/>
        </async>
    </flow>

    <flow name="EmailNotificationService2" doc:name="EmailNotificationService2">
        <vm:inbound-endpoint path="emailNotification" exchange-pattern="one-way" doc:name="Email Notification"/>
        <smtps:outbound-endpoint user="${user}" password="${password}" host="${host}" from="${from}" subject="Your order has been placed!"
                transformer-refs="OrderToEmail StringToEmail" doc:name="Send notification email"/>
    </flow>

    <flow name="DataWarehouse2" doc:name="DataWarehouse2">
        <vm:inbound-endpoint path="dataWarehouse" exchange-pattern="one-way" doc:name="Data Warehouse" />
        <component doc:name="Data Warehouse component">
            <singleton-object class="ua.org.gostroy.bookstore.DataWarehouse" />
        </component>
        <vm:outbound-endpoint ref="stats" transformer-refs="setHtmlContentType" doc:name="Statistics queue"/>
    </flow>
</mule>
